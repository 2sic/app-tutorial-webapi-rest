<h2>Get content-items list with REST from outside 2sxc</h2>
<p>
    This demo retrieves the list, but assumes you're not inside a 2sxc-module. There are a few differences:
    <ol>
        <li>no $2sxc used </li>
        <li>the app-name is not "auto" but "Tut-JS-REST", as it can't auto-detect the app</li>
        <li>note that this requires the settings to allow anonymous access</li>
    </ol>
</p>
<p>
    Note that it works for admins by default - to make it work for visitors you have to allow read-permissions for anonymous users (or users with view permissions). This is configured on the content-types - for more infos read <a href="http://2sxc.org/help?tag=permissions">Permissions Help</a>. 
</p>
<p>Press the following link to execute the script. Important: this example assumes that it's not running inside DNN, so the root API-path (the portal-root) would have to be manually specified. Because an external call couldn't ask any API about this, it would have to know the url endpoint. 
    <br>
    Portal root path: <input id="testValueForPortalRoot" type="text" value="@Dnn.Portal.PortalAlias.HTTPAlias"> 
    <br>
    <input type="button" value="Press to run" onclick="getAllFeedbackCategoriesPublic()">

</p>

<h2>These is where the categories will appear</h2>
<div id="message"></div>
<ol id="categories">
</ol>

<script>

// This will process the resulting data
function handleResult(data) {
    // use the data to show a message
    $('#message').html("Success, the $.ajax(...) worked! I found " + data.length + " categories, the first one is '" + data[0].Title + "'");

    // use the data to show a list of items
    var items = [];
    $.each(data, function(idx, category) {
        items.push( "<li>" + category.Title + "</li>" );
    });
    $(items.join("")).appendTo($('#categories'));

}

function getAllFeedbackCategoriesPublic() {
    // this is the manual setup using $.ajax
    $.ajax({
        url: "//" + $('#testValueForPortalRoot').val() + '/DesktopModules/2sxc/API/app/Tut-JS-REST/content/Feedback Category',
        success: handleResult,
        error: function(jqXHR, textStatus, errorThrown){
            alert("Error:" + errorThrown);
        }
    });
};



// This call will execute the main function when the document is ready
$(function() { 
    // just a demo, so commented out
    // getAllFeedbackCategoriesPublic() 
});
</script>

<!-- this includes the $2sxc helpers necessary to work --> 
<script src="/desktopmodules/tosic_sexycontent/js/2sxc.api.min.js"></script>

<!-- this script just has some tutorial-helpers, not relevant to understand the tutorial code -->
<script src="@App.Path/assets/tutorial-helpers.js"></script>